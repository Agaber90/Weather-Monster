package mocks

import (
	"Weather-Monster/models"
	"context"

	mock "github.com/stretchr/testify/mock"
)

// Usecase is an autogenerated mock type for the Usecase type
type Usecase struct {
	mock.Mock
}

//GetForecasts provides a mock function with given fields: ctx, ctyID
func (m *Usecase) GetForecasts(ctx context.Context, ctyID int64) ([]*models.Temperatures, error) {
	ret := m.Called(ctx, ctyID)
	var tmp []*models.Temperatures

	if rf, ok := ret.Get(0).(func(context.Context, int64) []*models.Temperatures); ok {
		tmp = rf(ctx, ctyID)
	} else {
		if ret.Get(0) != nil {
			tmp = ret.Get(0).([]*models.Temperatures)
		}
	}

	var errf error
	if rf, ok := ret.Get(2).(func(context.Context, int64) error); ok {
		errf = rf(ctx, ctyID)
	} else {
		errf = ret.Error(2)
	}

	return tmp, errf
}
